
import json
from sys import argv
import inspect

# Setup colors for pretty printing
YELLOW = "\u001b[33m"
RESET = "\u001b[0m"

# Print a note if no arguments were passed
if len(argv) == 1:
	print(
		YELLOW + "Note: you can pass the names of the files "
		"directly as command line arguments" + RESET
	)

# Get the path to the file we're compiling
file_name: str = ""
if len(argv) < 2:
	file_name = input("File to use as a tester (baseline): ")
else:
	file_name = argv[1]

# Get the path to the tests we're going to run
# TODO: eventually add automatic test generation?
json_tests_path: str = ""
if len(argv) < 3:
	print("The JSON file should contain lists of inputs for the programs.")
	print("""\
	Example: [
		[ ], <= This would test for everything before an input
		[ "input1" ], <= This would test for everything the second input, or the program terminating
		[ "name", "321" ], <= This would test both the name and account
	]""".replace("\t", " " * 4))
	json_tests_path = input("JSON file that has tests: ")
else:
	json_tests_path = argv[2]

# We load the JSON, then convert it to a string to remove spacing, making the
# final `json_tests` be Python-friendly :)
json_tests = str(json.loads(open(json_tests_path).read()))

# Get the name of the test
test_name: str = ""
if len(argv) < 4:
	test_name = input("Name of the test: ")
else:
	test_name = argv[3]

# Format the name of the test (for clarity)
if test_name.casefold().find("test") == -1:
	test_name = "test_" + test_name
test_name = test_name.replace("-", "_")

# Get the code we're about to compile
code = open(file_name).read()

# Compile it!
import compile
module_str = compile.compile(code)

# Make the test!
import tester
tester_source = inspect.getsource(tester) # Get the tester source

tester_source = """
# This file was generated by `test_generator.py`
# Editing it is not recommended, as it could be overwritten at any time!
\n""" + tester_source

# Replace the placeholder with the compiled bytes
tester_source = tester_source.replace('"PUT_MODULE_HERE"', module_str)

# Replace the placeholder with the tests!
tester_source = tester_source.replace('[["PUT_TESTS_HERE"]]', json_tests)

# Write the file
open(test_name, "w").write(tester_source)

# Print a final good bye
print("Generated the file", YELLOW + test_name + RESET + "!")
